<template>
  <div class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 p-4">
    <div class="bg-white rounded-lg shadow-lg max-w-xl w-full p-6">
      <h2 class="text-xl font-semibold text-gray-800 mb-4">Editar Producto</h2>

      <form @submit.prevent="editarProducto">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
          <div>
            <label for="codigo" class="text-sm font-medium text-gray-700 mb-1">Código</label>
            <input 
              id="codigo"
              v-model="producto.cod_item" 
              placeholder="Código" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required 
            />
          </div>

          <div>
            <label for="descripcion" class="text-sm font-medium text-gray-700 mb-1">Descripción</label>
            <input 
              id="descripcion"
              v-model="producto.descripcion_item" 
              placeholder="Descripción" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required 
            />
          </div>

          <div>
            <label for="precio" class="text-sm font-medium text-gray-700 mb-1">Precio Unitario</label>
            <input 
              id="precio"
              v-model.number="producto.precio_unitario" 
              type="number" 
              placeholder="Precio" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required 
            />
          </div>

          <div>
            <label for="cantidad" class="text-sm font-medium text-gray-700 mb-1">Cantidad Inicial</label>
            <input 
              id="cantidad"
              v-model.number="producto.cantidad_inicial" 
              type="number" 
              placeholder="Cantidad" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required 
            />
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
          <div>
            <label for="categoria" class="text-sm font-medium text-gray-700 mb-1">Categoría</label>
            <select 
              id="categoria"
              v-model="producto.id_categoria" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required
            >
              <option disabled value="">Seleccione categoría</option>
              <option v-for="c in categorias" :key="c.id_categoria" :value="c.id_categoria">{{ c.describe_categoria }}</option>
            </select>
          </div>

          <div>
            <label for="marca" class="text-sm font-medium text-gray-700 mb-1">Marca</label>
            <select 
              id="marca"
              v-model="producto.id_marcas" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required
            >
              <option disabled value="">Seleccione marca</option>
              <option v-for="m in marcas" :key="m.id_marca" :value="m.id_marca">{{ m.descripcion_marcas }}</option>
            </select>
          </div>

          <div>
            <label for="impuesto" class="text-sm font-medium text-gray-700 mb-1">IVA</label>
            <select 
              id="impuesto"
              v-model="producto.id_impuesto" 
              class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500/25" 
              required
            >
              <option disabled value="">Seleccione IVA</option>
              <option v-for="i in impuestos" :key="i.id_impuesto" :value="i.id_impuesto">{{ i.porcentaje_iva }}%</option>
            </select>
          </div>
        </div>

        <div class="flex items-center gap-3 mb-4">
          <input
            id="activo"
            type="checkbox"
            v-model="producto.item_activo"
            class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
          />
          <label for="activo" class="text-sm text-gray-700">Producto Activo</label>
        </div>

        <div class="flex justify-end gap-3">
          <button 
            type="button" 
            @click="$emit('close')" 
            class="bg-gray-300 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-400"
          >
            Cancelar
          </button>
          <button 
            type="submit" 
            class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700"
          >
            Actualizar
          </button>
        </div>
      </form>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted, watch } from 'vue'
import api from '@/api/productos'
import categoriasApi from '@/api/categorias'
import marcasApi from '@/api/marcas'
import impuestosApi from '@/api/impuestos'

const props = defineProps({ producto: Object })
const emit = defineEmits(['close', 'productoActualizado'])

const producto = ref({ ...props.producto })
const categorias = ref([])
const marcas = ref([])
const impuestos = ref([])

const cargarReferenciales = async () => {
  categorias.value = (await categoriasApi.getAll()).data || []
  marcas.value = (await marcasApi.getAll()).data || []
  impuestos.value = (await impuestosApi.getAll()).data || []
}

const editarProducto = async () => {
  const res = await api.updateProducto(producto.value.id_item, producto.value)
  if (res.success) {
    alert('✅ Producto actualizado con éxito')
    emit('productoActualizado')
  } else {
    alert('❌ Error: ' + res.error)
  }
}

watch(() => props.producto, val => {
  producto.value = { ...val }
})

onMounted(cargarReferenciales)
</script>
